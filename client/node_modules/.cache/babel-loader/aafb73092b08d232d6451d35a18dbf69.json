{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\contactkeeper\\\\client\\\\src\\\\context\\\\contact\\\\ContactState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactContext from './contactContext';\nimport contactReducer from './contactReducer';\nimport { ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactState = props => {\n  _s();\n\n  const initialState = {\n    contacts: [{\n      id: 1,\n      name: 'Jill Johnson',\n      email: 'jill@gmail.com',\n      phone: '111-111-1111',\n      type: 'personal'\n    }, {\n      id: 2,\n      name: 'Sarah Watson',\n      email: 'sara@gmail.com',\n      phone: '222-222-2222',\n      type: 'personal'\n    }, {\n      id: 3,\n      name: 'Harry White',\n      email: 'harry@gmail.com',\n      phone: '333-333-3333',\n      type: 'professional'\n    }],\n    current: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, initialState); // Add Contact\n\n  const addContact = contact => {\n    contact.id = uuidv4();\n    dispatch({\n      type: ADD_CONTACT,\n      payload: contact\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set Current Contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear Current Contact\n\n\n  const clearCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Update Contact\n  // Filter Contact\n  // Clear Filter\n\n\n  return /*#__PURE__*/_jsxDEV(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      addContact,\n      deleteContact\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ContactState;\nexport default ContactState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactState\");","map":{"version":3,"sources":["C:/xampp/htdocs/contactkeeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","v4","uuidv4","ContactContext","contactReducer","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","ContactState","props","initialState","contacts","id","name","email","phone","type","current","state","dispatch","addContact","contact","payload","deleteContact","setCurrent","clearCurrent","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SACEC,WADF,EAEEC,cAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,eANF,EAOEC,YAPF,QAQO,UARP;;;AAUA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,KAAK,EAAE,gBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KADQ,EAQR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,cAFR;AAGEC,MAAAA,KAAK,EAAE,gBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KARQ,EAeR;AACEJ,MAAAA,EAAE,EAAE,CADN;AAEEC,MAAAA,IAAI,EAAE,aAFR;AAGEC,MAAAA,KAAK,EAAE,iBAHT;AAIEC,MAAAA,KAAK,EAAE,cAJT;AAKEC,MAAAA,IAAI,EAAE;AALR,KAfQ,CADS;AAwBnBC,IAAAA,OAAO,EAAE;AAxBU,GAArB;AA0BA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvB,UAAU,CAACI,cAAD,EAAiBU,YAAjB,CAApC,CA3B8B,CA4B9B;;AACA,QAAMU,UAAU,GAAIC,OAAD,IAAa;AAC9BA,IAAAA,OAAO,CAACT,EAAR,GAAad,MAAM,EAAnB;AACAqB,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEf,WAAR;AAAqBqB,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAAR;AACD,GAHD,CA7B8B,CAkC9B;;;AACA,QAAME,aAAa,GAAIX,EAAD,IAAQ;AAC5BO,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEd,cAAR;AAAwBoB,MAAAA,OAAO,EAAEV;AAAjC,KAAD,CAAR;AACD,GAFD,CAnC8B,CAuC9B;;;AACA,QAAMY,UAAU,GAAIH,OAAD,IAAa;AAC9BF,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEb,WAAR;AAAqBmB,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAAR;AACD,GAFD,CAxC8B,CA4C9B;;;AACA,QAAMI,YAAY,GAAIJ,OAAD,IAAa;AAChCF,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAEb,WAAR;AAAqBmB,MAAAA,OAAO,EAAED;AAA9B,KAAD,CAAR;AACD,GAFD,CA7C8B,CAgD9B;AAEA;AAEA;;;AAEA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AAAEV,MAAAA,QAAQ,EAAEO,KAAK,CAACP,QAAlB;AAA4BS,MAAAA,UAA5B;AAAwCG,MAAAA;AAAxC,KADT;AAAA,cAGGd,KAAK,CAACiB;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7DD;;GAAMlB,Y;;KAAAA,Y;AA+DN,eAAeA,YAAf","sourcesContent":["import React, { useReducer } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactContext from './contactContext';\r\nimport contactReducer from './contactReducer';\r\nimport {\r\n  ADD_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n  UPDATE_CONTACT,\r\n  FILTER_CONTACTS,\r\n  CLEAR_FILTER,\r\n} from '../types';\r\n\r\nconst ContactState = (props) => {\r\n  const initialState = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: 'Jill Johnson',\r\n        email: 'jill@gmail.com',\r\n        phone: '111-111-1111',\r\n        type: 'personal',\r\n      },\r\n      {\r\n        id: 2,\r\n        name: 'Sarah Watson',\r\n        email: 'sara@gmail.com',\r\n        phone: '222-222-2222',\r\n        type: 'personal',\r\n      },\r\n      {\r\n        id: 3,\r\n        name: 'Harry White',\r\n        email: 'harry@gmail.com',\r\n        phone: '333-333-3333',\r\n        type: 'professional',\r\n      },\r\n    ],\r\n    current: null,\r\n  };\r\n  const [state, dispatch] = useReducer(contactReducer, initialState);\r\n  // Add Contact\r\n  const addContact = (contact) => {\r\n    contact.id = uuidv4();\r\n    dispatch({ type: ADD_CONTACT, payload: contact });\r\n  };\r\n\r\n  // Delete Contact\r\n  const deleteContact = (id) => {\r\n    dispatch({ type: DELETE_CONTACT, payload: id });\r\n  };\r\n\r\n  // Set Current Contact\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  // Clear Current Contact\r\n  const clearCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n  // Update Contact\r\n\r\n  // Filter Contact\r\n\r\n  // Clear Filter\r\n\r\n  return (\r\n    <ContactContext.Provider\r\n      value={{ contacts: state.contacts, addContact, deleteContact }}\r\n    >\r\n      {props.children}\r\n    </ContactContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactState;\r\n"]},"metadata":{},"sourceType":"module"}